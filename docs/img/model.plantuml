@startuml

package Model {

  abstract class Resource {
    # href
    # type
    # links
  }

  Resource <|-- Entity

  abstract class Entity {
    # id
    # name
    # description
    # tasks
  }

  Entity <|-- VCloud
  Entity <|-- Organization
  Entity <|-- OrganizationNetwork
  Entity <|-- VirtualDataCenter
  Entity <|-- Role
  Entity <|-- Right
  Entity <|-- ExternalNetwork
  Entity <|-- ProviderVirtualDataCenter
  Entity <|-- Task
  Entity <|-- Instance
  Entity <|-- Template
  Entity <|-- Network

  abstract class Instance {
  }

  Instance <|-- VApp
  Instance <|-- VirtualMachine

  abstract class Template {
  }

  Template <|-- VAppTemplate
  Template <|-- VirtualMachineTemplate

  abstract class Network {
  }

  Network <|-- VAppNetwork
  Network <|-- OrganizationNetwork
  Network <|-- ExternalNetwork

  class VCloud <<Entity>> {
  }

  VCloud *-- "*" ExternalNetwork
  VCloud *-- "*" ProviderVirtualDataCenter
  VCloud *-- "*" Right
  VCloud *-- "*" Role
  VCloud *-- "*" Organization

  class Organization <<Entity>> {
  }

  Organization *-- OrganizationNetwork
  Organization *-- VirtualDataCenter

  class VirtualDataCenter <<Entity>> {
  }

  VirtualDataCenter *-- VApp
  VirtualDataCenter *-- VAppTemplate
  VirtualDataCenter *-- Media
  VirtualDataCenter *-- StorageProfile
  VirtualDataCenter ..> "*" OrganizationNetwork : "availableNetworks"

  class VApp <<AbstractVApp>> {
  }

  VApp *-- VirtualMachine

  class VirtualMachine <<AbstractVApp>> {

  }

  class VAppTemplate <<ResourceEntity>> {
  }

  VAppTemplate *-- VirtualMachineTemplate

  class VirtualMachineTemplate <<AbstractVApp>> {
  }

  class Media {
  }

  Media <|-- CDRom
  Media <|-- Floppy

  class Reference {
    # href
    # id
    # name
    # type
  }

  Reference <|-- Link

  class Link {
    # rel
  }

  class Role <<Entity>> {
  }

  class Right <<Entity>> {
  }

  class Task <<Entity>> {
  }

}

@enduml
